%%%Denoising algorithm 
%%%
tic; 
yRGB = im2double(imread('DemosaickedCalibrated.tif'));
yRGBcrop=yRGB;%(800:1100, 500:800, 1:3);
%tic;
sigma=15; [NA, yRGB_est] = CBM3D(1, yRGBcrop, sigma);
%Time=toc;
%%%%%%%%%%%plot figures
close all; figure; imshow(yRGB_est);figure; imshow(yRGBcrop)
%%%%%%%%%%%%%%%%
%%%Applying this algorithms at different patches 
%%%%%%%%%%%%%%%%
yRGB = im2double(imread('DemosaickedCalibrated.tif'));
ii=size(yRGB,1)/320; 
jj=size(yRGB,2)/320;
sigma=15*ones(ii,jj); 
sigma(2:15,2:15)=8; 
sigma(3:14,3:14)=6; 
sigma(4:13,4:13)=4;
sigma(5:12,5:12)=2;
for jy=1:jj
      for jx=1:ii
          yRGBcropT=yRGB((1+(jy-1)*320):jy*320,(1+(jx-1)*320):jx*320,1:3); 
          %sig=sigma(jy, jx); 
          sig=10;
          [NA, yRGB_est] = CBM3D(1, yRGBcropT, sig);
          Final((1+(jy-1)*320):jy*320,(1+(jx-1)*320):jx*320,1:3)=yRGB_est;
      end
end
TimePatches=toc;
%%%%%%%%%%%plot figures
imwrite(Final,'FinalDenoisedCBM3Dsigma10.tif','tif');
close all; figure; imshow(yRGBcropT);figure; imshow(yRGB_est)
%%%%%%%%%%%%%%
%Calculate the noise statistics 
%%%%%%%%%%%%%%
break;
WhiteIm=im2double(imread('WhiteImageWhiteBalanced.tif')); 
figure; imshow(WhiteIm)
H = fspecial('average', [15 15]);
I = imfilter(WhiteIm, H);
K = I;%medfilt2(I(:,:,1));
figure; imshow(I); 
%figure; imshow(K); 
Calibrated(:,:,1)=WhiteIm(:,:,1)./K(:,:,1); 
Calibrated(:,:,2)=WhiteIm(:,:,2)./K(:,:,2); 
Calibrated(:,:,3)=WhiteIm(:,:,3)./K(:,:,3); 
%%%%%%%%%%%%
Calibrated=0.5*Calibrated./mean2(Calibrated); 
figure; imshow(Calibrated)


